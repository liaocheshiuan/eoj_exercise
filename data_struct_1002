#include<iostream>
using namespace std;
#define MAXN 10000
class List{
public:
    int p_n=0;
    int list[MAXN];
    int sq_insert(int i,int x);
    //int sq_delete(int i);
    int sq_cmp(List sq2);
private:
    int sq_same(List sq2,int num);
    int MIN(int a,int b);
};
int List::sq_insert(int i,int x)
{
    int j=0;
    if(i<0||i>p_n) return 1;
    if(p_n==MAXN) return 2;
    for(j=p_n;j>i;j--)
        list[j]=list[j-1];
    list[j]=x;
    p_n++;
    return 0;
}
int List::sq_same(List sq2,int num)
{
    int i=0;
    for(i=0;i<num;i++)
        if(list[i]!=sq2.list[i]) break;
    return i;
}
int List::sq_cmp(List sq2)
{
    int i=0;
    int length=MIN(p_n,sq2.p_n),result=sq_same(sq2,length);
    if (p_n==sq2.p_n&&p_n==result) return 0;
    else if (p_n<sq2.p_n&&p_n==result) return -1;
    else if(result>0&&result<length&&list[result]<sq2.list[result])
        return -1;
    else return 1;
}
int List::MIN(int a,int b)
{
    return a<b?a:b;
}
int main()
{
    int m,n;
    cin>>m>>n;
    List sq1,sq2;
    int i,x;
    for(i=0;i<m;i++)
    {
        cin>>x;
        sq1.sq_insert(i,x);
        //cout<<x;
    }
    for(i=0;i<n;i++)
    {
        cin>>x;
        sq2.sq_insert(i,x);
        //cout<<x;
    }
    cout<<sq1.sq_cmp(sq2)<<endl;
    return 0;
}

